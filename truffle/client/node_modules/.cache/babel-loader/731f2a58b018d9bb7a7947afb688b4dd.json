{"ast":null,"code":"import _regeneratorRuntime from \"/home/thleruth/EthCode/bountyCollectorConsensys/BountyCollectorConsensysDevProgram18/truffle/client/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/thleruth/EthCode/bountyCollectorConsensys/BountyCollectorConsensysDevProgram18/truffle/client/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/home/thleruth/EthCode/bountyCollectorConsensys/BountyCollectorConsensysDevProgram18/truffle/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/thleruth/EthCode/bountyCollectorConsensys/BountyCollectorConsensysDevProgram18/truffle/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/thleruth/EthCode/bountyCollectorConsensys/BountyCollectorConsensysDevProgram18/truffle/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/thleruth/EthCode/bountyCollectorConsensys/BountyCollectorConsensysDevProgram18/truffle/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/thleruth/EthCode/bountyCollectorConsensys/BountyCollectorConsensysDevProgram18/truffle/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/thleruth/EthCode/bountyCollectorConsensys/BountyCollectorConsensysDevProgram18/truffle/client/src/components/Container.jsx\";\nimport React, { Component } from \"react\";\nimport AddBounty from \"./AddBounty\";\nimport AddProposal from \"./AddProposal\";\nimport ReviewProposal from \"./ReviewProposal\";\nimport AddDispute from \"./AddDispute\";\nimport Disputes from \"./Disputes\";\nimport Bounties from \"./Bounties\";\nimport Proposals from \"./Proposals\";\nimport Balance from \"./Balance\";\n\nvar Container =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Container, _Component);\n\n  function Container() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Container);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Container)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      bountiesCounter: \"\",\n      disputesCounter: \"\",\n      viewedProposalsBountyID: \"\",\n      viewedProposalBountyPoster: \"\",\n      viewedProposalsCounter: \"\",\n      viewedRejectedProposalsCounter: \"\",\n      viewProposalsBountyStatus: \"\",\n      disputeCost: \"\",\n      expirationTime: \"\",\n      disputeTime: \"\",\n      arbitragerAddress: \"\",\n      ownerAddress: \"\",\n      contractStatus: \"active\",\n      newContractAddressInput: \"\",\n      newContractAddress: \"0x0000000000000000000000000000000000000000\"\n    };\n    _this.componentDidMount =\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee() {\n      var bountiesCounter, disputesCounter, disputeCost, expirationTime, disputeTime, arbitragerAddress, ownerAddress, contractStatus, newContractAddress;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.t0 = parseInt;\n              _context.next = 3;\n              return _this.props.appState.contract.bountiesCounter();\n\n            case 3:\n              _context.t1 = _context.sent;\n              bountiesCounter = (0, _context.t0)(_context.t1);\n              _context.t2 = parseInt;\n              _context.next = 8;\n              return _this.props.appState.contract.disputesCounter();\n\n            case 8:\n              _context.t3 = _context.sent;\n              disputesCounter = (0, _context.t2)(_context.t3);\n              _context.t4 = parseInt;\n              _context.next = 13;\n              return _this.props.appState.contract.disputeCost();\n\n            case 13:\n              _context.t5 = _context.sent;\n              disputeCost = (0, _context.t4)(_context.t5);\n              _context.t6 = Date;\n              _context.t7 = parseInt;\n              _context.next = 19;\n              return _this.props.appState.contract.contractExpiration();\n\n            case 19:\n              _context.t8 = _context.sent;\n              _context.t9 = (0, _context.t7)(_context.t8);\n              expirationTime = new _context.t6(_context.t9);\n              expirationTime = expirationTime.toUTCString();\n              _context.t10 = parseInt;\n              _context.next = 26;\n              return _this.props.appState.contract.disputeAllowance();\n\n            case 26:\n              _context.t11 = _context.sent;\n              _context.t12 = _context.t11 / 86400;\n              disputeTime = (0, _context.t10)(_context.t12);\n              _context.next = 31;\n              return _this.props.appState.contract.arbitrager();\n\n            case 31:\n              arbitragerAddress = _context.sent;\n              _context.next = 34;\n              return _this.props.appState.contract.owner();\n\n            case 34:\n              ownerAddress = _context.sent;\n              contractStatus = \"active\";\n              _context.next = 38;\n              return _this.props.appState.contract.isExpired();\n\n            case 38:\n              if (!_context.sent) {\n                _context.next = 42;\n                break;\n              }\n\n              contractStatus = \"expired\";\n              _context.next = 46;\n              break;\n\n            case 42:\n              _context.next = 44;\n              return _this.props.appState.contract.stopped();\n\n            case 44:\n              if (!_context.sent) {\n                _context.next = 46;\n                break;\n              }\n\n              contractStatus = \"stopped\";\n\n            case 46:\n              _context.next = 48;\n              return _this.props.appState.contract.newContractAddress();\n\n            case 48:\n              newContractAddress = _context.sent;\n\n              _this.setState({\n                bountiesCounter: bountiesCounter,\n                disputesCounter: disputesCounter,\n                disputeCost: disputeCost,\n                expirationTime: expirationTime,\n                disputeTime: disputeTime,\n                arbitragerAddress: arbitragerAddress,\n                ownerAddress: ownerAddress,\n                contractStatus: contractStatus,\n                newContractAddress: newContractAddress\n              });\n\n            case 50:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, this);\n    }));\n\n    _this.refreshBounties =\n    /*#__PURE__*/\n    function () {\n      var _ref2 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2(bountyID) {\n        var bountiesCounter;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.t0 = parseInt;\n                _context2.next = 3;\n                return _this.props.appState.contract.bountiesCounter();\n\n              case 3:\n                _context2.t1 = _context2.sent;\n                bountiesCounter = (0, _context2.t0)(_context2.t1);\n\n                _this.bounties.addBounty(bountyID);\n\n                _this.setState({\n                  bountiesCounter: bountiesCounter\n                });\n\n              case 7:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      return function (_x) {\n        return _ref2.apply(this, arguments);\n      };\n    }();\n\n    _this.addDispute =\n    /*#__PURE__*/\n    function () {\n      var _ref3 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee3(proposalID, disputeID) {\n        var disputesCounter;\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                _context3.t0 = parseInt;\n                _context3.next = 3;\n                return _this.props.appState.contract.disputesCounter();\n\n              case 3:\n                _context3.t1 = _context3.sent;\n                disputesCounter = (0, _context3.t0)(_context3.t1);\n\n                _this.setState({\n                  disputesCounter: disputesCounter\n                });\n\n                _this.disputes.addDispute(disputeID);\n\n                _this.proposals.updateProposal(proposalID, true);\n\n              case 8:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      return function (_x2, _x3) {\n        return _ref3.apply(this, arguments);\n      };\n    }();\n\n    _this.stopContract =\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee4() {\n      return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              _context4.next = 2;\n              return _this.props.appState.contract.StopContract({\n                from: _this.props.appState.accounts[0]\n              });\n\n            case 2:\n              _this.setState({\n                contractStatus: \"stopped\"\n              });\n\n            case 3:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, _callee4, this);\n    }));\n    _this.setNewContractAddress =\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee5() {\n      return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n        while (1) {\n          switch (_context5.prev = _context5.next) {\n            case 0:\n              _context5.next = 2;\n              return _this.props.appState.contract.setNewContractAddress(_this.state.newContractAddressInput, {\n                from: _this.props.appState.accounts[0]\n              });\n\n            case 2:\n              _this.setState({\n                newContractAddress: _this.state.newContractAddressInput\n              });\n\n            case 3:\n            case \"end\":\n              return _context5.stop();\n          }\n        }\n      }, _callee5, this);\n    }));\n    return _this;\n  }\n\n  _createClass(Container, [{\n    key: \"refreshBounty\",\n    value: function refreshBounty(bountyID) {\n      this.bounties.updateBounty(bountyID);\n    }\n  }, {\n    key: \"addProposal\",\n    value: function addProposal(bountyID) {\n      this.refreshBounty(bountyID);\n\n      if (this.state.viewedProposalsBountyID === bountyID) {\n        var viewedProposalsCounter = this.state.viewedProposalsCounter + 1;\n        this.setState({\n          viewedProposalsCounter: viewedProposalsCounter\n        });\n      }\n    }\n  }, {\n    key: \"declineProposal\",\n    value: function declineProposal(bountyID, proposalID) {\n      this.refreshBounty(bountyID);\n      this.proposals.updateProposal(proposalID, true);\n    }\n  }, {\n    key: \"acceptProposal\",\n    value: function acceptProposal(bountyID, proposalID) {\n      this.refreshBounty(bountyID);\n      this.proposals.updateProposal(proposalID, false);\n      this.balanceManager.refreshBalance();\n    }\n  }, {\n    key: \"viewProposals\",\n    value: function viewProposals(viewedProposalsBountyID, viewedProposalBountyPoster, viewedProposalsCounter, viewedRejectedProposalsCounter, status) {\n      this.setState({\n        viewedProposalsBountyID: viewedProposalsBountyID,\n        viewedProposalBountyPoster: viewedProposalBountyPoster,\n        viewedProposalsCounter: viewedProposalsCounter,\n        viewedRejectedProposalsCounter: viewedRejectedProposalsCounter,\n        viewProposalsBountyStatus: status\n      });\n    }\n  }, {\n    key: \"viewProposalAdder\",\n    value: function viewProposalAdder(bountyID) {\n      this.proposalAdder.viewProposalAdder(bountyID);\n    }\n  }, {\n    key: \"viewProposalReviewer\",\n    value: function viewProposalReviewer(bountyID, proposalID) {\n      this.proposalReviewer.viewProposalReviewer(bountyID, proposalID);\n    }\n  }, {\n    key: \"viewDisputeAdder\",\n    value: function viewDisputeAdder(bountyID, proposalID) {\n      this.disputeAdder.viewDisputeAdder(bountyID, proposalID);\n    }\n  }, {\n    key: \"acceptDispute\",\n    value: function acceptDispute(bountyID) {\n      this.balanceManager.refreshBalance();\n      this.refreshBounty(bountyID);\n    }\n  }, {\n    key: \"declineDispute\",\n    value: function declineDispute() {\n      this.balanceManager.refreshBalance();\n    }\n  }, {\n    key: \"withdrawDispute\",\n    value: function withdrawDispute() {\n      this.balanceManager.refreshBalance();\n    }\n  }, {\n    key: \"conditionalDisputesRendering\",\n    value: function conditionalDisputesRendering() {\n      var _this2 = this;\n\n      if (this.state.disputesCounter >= 1) {\n        return React.createElement(Disputes, {\n          appState: this.props.appState,\n          onRef: function onRef(ref) {\n            return _this2.disputes = ref;\n          },\n          arbitragerAddress: this.state.arbitragerAddress,\n          disputesCounter: this.state.disputesCounter,\n          onAcceptDispute: function onAcceptDispute(bountyID) {\n            return _this2.acceptDispute(bountyID);\n          },\n          onDeclineDispute: function onDeclineDispute() {\n            return _this2.declineDispute();\n          },\n          onWithdrawDispute: function onWithdrawDispute() {\n            return _this2.withdrawDispute();\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 124\n          },\n          __self: this\n        });\n      } else {\n        return;\n      }\n    }\n  }, {\n    key: \"conditionalProposalsRendering\",\n    value: function conditionalProposalsRendering() {\n      var _this3 = this;\n\n      if (this.state.viewedProposalsBountyID >= 1) {\n        return React.createElement(Proposals, {\n          appState: this.props.appState,\n          bountyID: this.state.viewedProposalsBountyID,\n          bountyStatus: this.state.viewProposalsBountyStatus,\n          bountyPoster: this.state.viewedProposalBountyPoster,\n          proposalsCounter: this.state.viewedProposalsCounter,\n          latestProposalID: this.state.viewedRejectedProposalsCounter + 1,\n          onReviewProposal: function onReviewProposal(bountyID, proposalID) {\n            _this3.viewProposalReviewer(bountyID, proposalID);\n          },\n          onAddDispute: function onAddDispute(bountyID, proposalID) {\n            _this3.viewDisputeAdder(bountyID, proposalID);\n          },\n          onRef: function onRef(ref) {\n            return _this3.proposals = ref;\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 141\n          },\n          __self: this\n        });\n      } else {\n        return;\n      }\n    }\n  }, {\n    key: \"conditionalAddProposalRendering\",\n    value: function conditionalAddProposalRendering() {\n      var _this4 = this;\n\n      return React.createElement(AddProposal, {\n        appState: this.props.appState,\n        bountiesCounter: this.state.bountiesCounter,\n        onRef: function onRef(ref) {\n          return _this4.proposalAdder = ref;\n        },\n        onAddProposal: function onAddProposal(bountyID) {\n          return _this4.addProposal(bountyID);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160\n        },\n        __self: this\n      });\n    }\n  }, {\n    key: \"conditionalReviewProposalRendering\",\n    value: function conditionalReviewProposalRendering() {\n      var _this5 = this;\n\n      return React.createElement(ReviewProposal, {\n        appState: this.props.appState,\n        onRef: function onRef(ref) {\n          return _this5.proposalReviewer = ref;\n        },\n        onDeclineProposal: function onDeclineProposal(bountyID, proposalID) {\n          _this5.declineProposal(bountyID, proposalID);\n        },\n        onAcceptProposal: function onAcceptProposal(bountyID, proposalID) {\n          _this5.acceptProposal(bountyID, proposalID);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 171\n        },\n        __self: this\n      });\n    }\n  }, {\n    key: \"conditionalDisputeAdderRendering\",\n    value: function conditionalDisputeAdderRendering() {\n      var _this6 = this;\n\n      return React.createElement(AddDispute, {\n        appState: this.props.appState,\n        onRef: function onRef(ref) {\n          return _this6.disputeAdder = ref;\n        },\n        disputeCost: this.state.disputeCost,\n        onAddDispute: this.addDispute,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 182\n        },\n        __self: this\n      });\n    }\n  }, {\n    key: \"conditionalStopContractButtonRendering\",\n    value: function conditionalStopContractButtonRendering() {\n      if (this.props.appState.accounts[0].toUpperCase() === this.state.ownerAddress.toUpperCase() && this.state.contractStatus === \"active\") {\n        return React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 193\n          },\n          __self: this\n        }, React.createElement(\"button\", {\n          className: \"stopContractButton\",\n          id: \"stopContractButton\",\n          onClick: this.stopContract,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 193\n          },\n          __self: this\n        }, \"Stop Contract\"));\n      }\n    }\n  }, {\n    key: \"conditionalNewContractAddressInputHeader\",\n    value: function conditionalNewContractAddressInputHeader() {\n      if (this.state.newContractAddress === \"0x0000000000000000000000000000000000000000\" && this.props.appState.accounts[0].toUpperCase() === this.state.ownerAddress.toUpperCase() && this.state.contractStatus !== \"active\") {\n        return React.createElement(\"th\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 199\n          },\n          __self: this\n        }, \"New Contract Address Input\");\n      }\n    }\n  }, {\n    key: \"conditionalNewContractAddressHeader\",\n    value: function conditionalNewContractAddressHeader() {\n      if (this.state.newContractAddress !== \"0x0000000000000000000000000000000000000000\") {\n        return React.createElement(\"th\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 205\n          },\n          __self: this\n        }, \"New Contract Address\");\n      }\n    }\n  }, {\n    key: \"conditionalNewContractAddressInput\",\n    value: function conditionalNewContractAddressInput() {\n      var _this7 = this;\n\n      if (this.state.newContractAddress === \"0x0000000000000000000000000000000000000000\" && this.props.appState.accounts[0].toUpperCase() === this.state.ownerAddress.toUpperCase() && this.state.contractStatus !== \"active\") {\n        return React.createElement(\"label\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 211\n          },\n          __self: this\n        }, React.createElement(\"input\", {\n          value: this.state.newContractAddressInput,\n          onChange: function onChange(evt) {\n            _this7.setState({\n              newContractAddressInput: evt.target.value\n            });\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 211\n          },\n          __self: this\n        }));\n      }\n    }\n  }, {\n    key: \"conditionalNewContractAddress\",\n    value: function conditionalNewContractAddress() {\n      if (this.state.newContractAddress !== \"0x0000000000000000000000000000000000000000\") {\n        return React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 217\n          },\n          __self: this\n        }, this.state.newContractAddress);\n      }\n    }\n  }, {\n    key: \"conditionalSetNewContractAddressButton\",\n    value: function conditionalSetNewContractAddressButton() {\n      if (this.state.newContractAddress === \"0x0000000000000000000000000000000000000000\" && this.props.appState.accounts[0].toUpperCase() === this.state.ownerAddress.toUpperCase() && this.state.contractStatus !== \"active\") {\n        return React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 223\n          },\n          __self: this\n        }, React.createElement(\"button\", {\n          className: \"stopContractButton\",\n          id: \"stopContractButton\",\n          onClick: this.setNewContractAddress,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 223\n          },\n          __self: this\n        }, \"Set\"));\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this8 = this;\n\n      return React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 230\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 231\n        },\n        __self: this\n      }, \"Bounties Collector\"), React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 232\n        },\n        __self: this\n      }, \"Contract Information\"), React.createElement(\"table\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 233\n        },\n        __self: this\n      }, React.createElement(\"tbody\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 234\n        },\n        __self: this\n      }, React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 235\n        },\n        __self: this\n      }, React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 236\n        },\n        __self: this\n      }, \"Bounties Counter\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 237\n        },\n        __self: this\n      }, \"Contract Expiration\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 238\n        },\n        __self: this\n      }, \"Dispute Cost (in ETH)\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 239\n        },\n        __self: this\n      }, \"Dispute time (in hour)\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 240\n        },\n        __self: this\n      }, \"Contract Address\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 241\n        },\n        __self: this\n      }, \"Contract Status\"), this.conditionalNewContractAddressInputHeader(), this.conditionalNewContractAddressHeader()), React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 245\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 246\n        },\n        __self: this\n      }, this.state.bountiesCounter), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 247\n        },\n        __self: this\n      }, this.state.expirationTime), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 248\n        },\n        __self: this\n      }, this.state.disputeCost / 1000000000000000000), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 249\n        },\n        __self: this\n      }, this.state.disputeTime), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 250\n        },\n        __self: this\n      }, this.props.appState.contract.address), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 251\n        },\n        __self: this\n      }, this.state.contractStatus), this.conditionalStopContractButtonRendering(), this.conditionalNewContractAddressInput(), this.conditionalSetNewContractAddressButton(), this.conditionalNewContractAddress()))), React.createElement(Balance, {\n        appState: this.props.appState,\n        onRef: function onRef(ref) {\n          return _this8.balanceManager = ref;\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 259\n        },\n        __self: this\n      }), this.conditionalDisputesRendering(), React.createElement(AddBounty, {\n        appState: this.props.appState,\n        onAddBounty: function onAddBounty(bountyID) {\n          return _this8.refreshBounties(bountyID);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 264\n        },\n        __self: this\n      }), React.createElement(Bounties, {\n        appState: this.props.appState,\n        bountiesCounter: this.state.bountiesCounter,\n        onRef: function onRef(ref) {\n          return _this8.bounties = ref;\n        },\n        onCancelBounty: function onCancelBounty() {\n          return _this8.balanceManager.refreshBalance();\n        },\n        onWithdrawBounty: function onWithdrawBounty() {\n          return _this8.balanceManager.refreshBalance();\n        },\n        contractStatus: this.state.contractStatus,\n        onViewProposals: function onViewProposals(bountyID, viewedProposalBountyPoster, proposalsCounter, viewedRejectedProposalsCounter, status) {\n          return _this8.viewProposals(bountyID, viewedProposalBountyPoster, proposalsCounter, viewedRejectedProposalsCounter, status);\n        },\n        onAddProposal: function onAddProposal(bountyID) {\n          _this8.viewProposalAdder(bountyID);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 268\n        },\n        __self: this\n      }), this.conditionalProposalsRendering(), this.conditionalDisputeAdderRendering(), this.conditionalAddProposalRendering(), this.conditionalReviewProposalRendering());\n    }\n  }]);\n\n  return Container;\n}(Component);\n\nexport default Container;","map":{"version":3,"sources":["/home/thleruth/EthCode/bountyCollectorConsensys/BountyCollectorConsensysDevProgram18/truffle/client/src/components/Container.jsx"],"names":["React","Component","AddBounty","AddProposal","ReviewProposal","AddDispute","Disputes","Bounties","Proposals","Balance","Container","state","bountiesCounter","disputesCounter","viewedProposalsBountyID","viewedProposalBountyPoster","viewedProposalsCounter","viewedRejectedProposalsCounter","viewProposalsBountyStatus","disputeCost","expirationTime","disputeTime","arbitragerAddress","ownerAddress","contractStatus","newContractAddressInput","newContractAddress","componentDidMount","parseInt","props","appState","contract","Date","contractExpiration","toUTCString","disputeAllowance","arbitrager","owner","isExpired","stopped","setState","refreshBounties","bountyID","bounties","addBounty","addDispute","proposalID","disputeID","disputes","proposals","updateProposal","stopContract","StopContract","from","accounts","setNewContractAddress","updateBounty","refreshBounty","balanceManager","refreshBalance","status","proposalAdder","viewProposalAdder","proposalReviewer","viewProposalReviewer","disputeAdder","viewDisputeAdder","ref","acceptDispute","declineDispute","withdrawDispute","addProposal","declineProposal","acceptProposal","toUpperCase","evt","target","value","conditionalNewContractAddressInputHeader","conditionalNewContractAddressHeader","address","conditionalStopContractButtonRendering","conditionalNewContractAddressInput","conditionalSetNewContractAddressButton","conditionalNewContractAddress","conditionalDisputesRendering","proposalsCounter","viewProposals","conditionalProposalsRendering","conditionalDisputeAdderRendering","conditionalAddProposalRendering","conditionalReviewProposalRendering"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport AddBounty from \"./AddBounty\";\nimport AddProposal from \"./AddProposal\";\nimport ReviewProposal from \"./ReviewProposal\";\nimport AddDispute from \"./AddDispute\";\nimport Disputes from \"./Disputes\";\nimport Bounties from \"./Bounties\";\nimport Proposals from \"./Proposals\";\nimport Balance from \"./Balance\";\n\nclass Container extends Component {\n  state = {\n    bountiesCounter: \"\",\n    disputesCounter: \"\",\n    viewedProposalsBountyID: \"\",\n    viewedProposalBountyPoster: \"\",\n    viewedProposalsCounter: \"\",\n    viewedRejectedProposalsCounter: \"\",\n    viewProposalsBountyStatus: \"\",\n    disputeCost: \"\",\n    expirationTime: \"\",\n    disputeTime: \"\",\n    arbitragerAddress: \"\",\n    ownerAddress: \"\",\n    contractStatus: \"active\",\n    newContractAddressInput: \"\",\n    newContractAddress: \"0x0000000000000000000000000000000000000000\",\n  }\n\n  componentDidMount = async () => {\n    const bountiesCounter = parseInt(await this.props.appState.contract.bountiesCounter());\n    const disputesCounter = parseInt(await this.props.appState.contract.disputesCounter());\n    const disputeCost = parseInt(await this.props.appState.contract.disputeCost());\n    var expirationTime = new Date(parseInt(await this.props.appState.contract.contractExpiration()));\n    expirationTime = expirationTime.toUTCString();\n    const disputeTime = parseInt(await this.props.appState.contract.disputeAllowance()/86400);\n    const arbitragerAddress = await this.props.appState.contract.arbitrager();\n    const ownerAddress = await this.props.appState.contract.owner();\n    var contractStatus = \"active\";\n    if (await this.props.appState.contract.isExpired()) contractStatus = \"expired\";\n    else if (await this.props.appState.contract.stopped()) contractStatus = \"stopped\";\n    const newContractAddress = await this.props.appState.contract.newContractAddress();\n    this.setState({ bountiesCounter, disputesCounter, disputeCost, expirationTime, disputeTime, arbitragerAddress, ownerAddress , contractStatus, newContractAddress});\n  }\n\n  refreshBounties = async(bountyID) => {\n    var bountiesCounter = parseInt(await this.props.appState.contract.bountiesCounter());\n    this.bounties.addBounty(bountyID);\n    this.setState({bountiesCounter});\n  }\n\n  addDispute = async(proposalID, disputeID) => {\n    const disputesCounter = parseInt(await this.props.appState.contract.disputesCounter());\n    this.setState({disputesCounter});\n    this.disputes.addDispute(disputeID);\n    this.proposals.updateProposal(proposalID, true);\n  }\n\n  refreshBounty(bountyID) {\n    this.bounties.updateBounty(bountyID);\n  }\n\n  addProposal(bountyID) {\n    this.refreshBounty(bountyID);\n    if (this.state.viewedProposalsBountyID === bountyID) {\n      const viewedProposalsCounter = this.state.viewedProposalsCounter + 1;\n      this.setState({viewedProposalsCounter});\n    }\n  }\n\n  declineProposal(bountyID, proposalID) {\n    this.refreshBounty(bountyID);\n    this.proposals.updateProposal(proposalID, true);\n  }\n\n  acceptProposal(bountyID, proposalID) {\n    this.refreshBounty(bountyID);\n    this.proposals.updateProposal(proposalID, false);\n    this.balanceManager.refreshBalance();\n  }\n\n  viewProposals(viewedProposalsBountyID, viewedProposalBountyPoster, viewedProposalsCounter, viewedRejectedProposalsCounter, status) {\n    this.setState({viewedProposalsBountyID, viewedProposalBountyPoster, viewedProposalsCounter, viewedRejectedProposalsCounter, viewProposalsBountyStatus: status});\n  }\n\n  viewProposalAdder(bountyID) {\n    this.proposalAdder.viewProposalAdder(bountyID);\n  }\n\n  viewProposalReviewer(bountyID, proposalID) {\n    this.proposalReviewer.viewProposalReviewer(bountyID, proposalID);\n  }\n\n  viewDisputeAdder(bountyID, proposalID) {\n    this.disputeAdder.viewDisputeAdder(bountyID, proposalID);\n  }\n\n  acceptDispute(bountyID) {\n    this.balanceManager.refreshBalance();\n    this.refreshBounty(bountyID)\n  }\n\n  declineDispute() {\n    this.balanceManager.refreshBalance();\n  }\n\n  withdrawDispute() {\n    this.balanceManager.refreshBalance();\n  }\n\n  stopContract = async() => {\n    await this.props.appState.contract.StopContract({from: this.props.appState.accounts[0]});\n    this.setState({contractStatus: \"stopped\"});\n  }\n\n  setNewContractAddress = async() => {\n    await this.props.appState.contract.setNewContractAddress(this.state.newContractAddressInput, {from: this.props.appState.accounts[0]});\n    this.setState({newContractAddress: this.state.newContractAddressInput});\n  }\n\n  conditionalDisputesRendering() {\n    if (this.state.disputesCounter >= 1) {\n      return (\n        <Disputes\n          appState={this.props.appState}\n          onRef={ref => (this.disputes = ref)}\n          arbitragerAddress={this.state.arbitragerAddress}\n          disputesCounter={this.state.disputesCounter}\n          onAcceptDispute={(bountyID) => this.acceptDispute(bountyID)}\n          onDeclineDispute={() => this.declineDispute()}\n          onWithdrawDispute={() => this.withdrawDispute()}\n        />)\n    } else {\n      return;\n    }\n  }\n\n  conditionalProposalsRendering() {\n    if (this.state.viewedProposalsBountyID >= 1) {\n      return (\n        <Proposals\n          appState = {this.props.appState}\n          bountyID = {this.state.viewedProposalsBountyID}\n          bountyStatus = {this.state.viewProposalsBountyStatus}\n          bountyPoster = {this.state.viewedProposalBountyPoster}\n          proposalsCounter = {this.state.viewedProposalsCounter}\n          latestProposalID = {this.state.viewedRejectedProposalsCounter + 1}\n          onReviewProposal = {(bountyID, proposalID) => {this.viewProposalReviewer(bountyID, proposalID)}}\n          onAddDispute = {(bountyID, proposalID) => {this.viewDisputeAdder(bountyID, proposalID)}}\n          onRef = {ref => (this.proposals = ref)}\n        />\n      )\n    } else {\n      return;\n    }\n  }\n\n  conditionalAddProposalRendering() {\n    return (\n      <AddProposal\n        appState={this.props.appState}\n        bountiesCounter={this.state.bountiesCounter}\n        onRef={ref => (this.proposalAdder = ref)}\n        onAddProposal={bountyID => this.addProposal(bountyID)}\n      />\n    )\n  }\n\n  conditionalReviewProposalRendering() {\n    return (\n      <ReviewProposal\n        appState={this.props.appState}\n        onRef={ref => (this.proposalReviewer = ref)}\n        onDeclineProposal={(bountyID, proposalID) => {this.declineProposal(bountyID, proposalID)}}\n        onAcceptProposal={(bountyID, proposalID) => {this.acceptProposal(bountyID, proposalID)}}\n      />\n    )\n  }\n\n  conditionalDisputeAdderRendering() {\n    return (\n      <AddDispute\n        appState={this.props.appState}\n        onRef={ref => (this.disputeAdder = ref)}\n        disputeCost={this.state.disputeCost}\n        onAddDispute={this.addDispute}\n      />\n    )\n  }\n\n  conditionalStopContractButtonRendering() {\n    if (this.props.appState.accounts[0].toUpperCase() === this.state.ownerAddress.toUpperCase() && this.state.contractStatus === \"active\") {\n      return <td><button className=\"stopContractButton\" id=\"stopContractButton\" onClick={this.stopContract}>Stop Contract</button></td>\n    }\n  }\n\n  conditionalNewContractAddressInputHeader() {\n    if (this.state.newContractAddress === \"0x0000000000000000000000000000000000000000\" && this.props.appState.accounts[0].toUpperCase() === this.state.ownerAddress.toUpperCase() && this.state.contractStatus !== \"active\") {\n      return <th>New Contract Address Input</th>\n    }\n  }\n\n  conditionalNewContractAddressHeader() {\n    if (this.state.newContractAddress !== \"0x0000000000000000000000000000000000000000\") {\n      return <th>New Contract Address</th>\n    }\n  }\n\n  conditionalNewContractAddressInput() {\n    if (this.state.newContractAddress === \"0x0000000000000000000000000000000000000000\" && this.props.appState.accounts[0].toUpperCase() === this.state.ownerAddress.toUpperCase() && this.state.contractStatus !== \"active\") {\n      return <label><input value={this.state.newContractAddressInput} onChange={evt => {this.setState({newContractAddressInput: evt.target.value});}}/></label>\n    }\n  }\n\n  conditionalNewContractAddress() {\n    if (this.state.newContractAddress !== \"0x0000000000000000000000000000000000000000\") {\n      return  <td>{this.state.newContractAddress}</td>\n    }\n  }\n\n  conditionalSetNewContractAddressButton() {\n    if (this.state.newContractAddress === \"0x0000000000000000000000000000000000000000\" && this.props.appState.accounts[0].toUpperCase() === this.state.ownerAddress.toUpperCase() && this.state.contractStatus !== \"active\") {\n      return <td><button className=\"stopContractButton\" id=\"stopContractButton\" onClick={this.setNewContractAddress}>Set</button></td>\n    }\n  }\n\n\n  render() {\n    return (\n      <React.Fragment>\n        <h1>Bounties Collector</h1>\n        <h3>Contract Information</h3>\n        <table>\n          <tbody>\n            <tr>\n              <th>Bounties Counter</th>\n              <th>Contract Expiration</th>\n              <th>Dispute Cost (in ETH)</th>\n              <th>Dispute time (in hour)</th>\n              <th>Contract Address</th>\n              <th>Contract Status</th>\n              {this.conditionalNewContractAddressInputHeader()}\n              {this.conditionalNewContractAddressHeader()}\n            </tr>\n            <tr>\n              <td>{this.state.bountiesCounter}</td>\n              <td>{this.state.expirationTime}</td>\n              <td>{this.state.disputeCost/1000000000000000000}</td>\n              <td>{this.state.disputeTime}</td>\n              <td>{this.props.appState.contract.address}</td>\n              <td>{this.state.contractStatus}</td>\n              {this.conditionalStopContractButtonRendering()}\n              {this.conditionalNewContractAddressInput()}\n              {this.conditionalSetNewContractAddressButton()}\n              {this.conditionalNewContractAddress()}\n            </tr>\n          </tbody>\n        </table>\n        <Balance\n          appState={this.props.appState}\n          onRef={ref => (this.balanceManager = ref)}\n        />\n        {this.conditionalDisputesRendering()}\n        <AddBounty\n          appState={this.props.appState}\n          onAddBounty={(bountyID) => this.refreshBounties(bountyID)}\n        />\n        <Bounties\n          appState={this.props.appState}\n          bountiesCounter={this.state.bountiesCounter}\n          onRef={ref => (this.bounties = ref)}\n          onCancelBounty={() => this.balanceManager.refreshBalance()}\n          onWithdrawBounty={() => this.balanceManager.refreshBalance()}\n          contractStatus={this.state.contractStatus}\n          onViewProposals={(bountyID, viewedProposalBountyPoster, proposalsCounter, viewedRejectedProposalsCounter, status) => this.viewProposals(bountyID, viewedProposalBountyPoster, proposalsCounter, viewedRejectedProposalsCounter, status)}\n          onAddProposal={bountyID => {this.viewProposalAdder(bountyID)}}\n        />\n        {this.conditionalProposalsRendering()}\n        {this.conditionalDisputeAdderRendering()}\n        {this.conditionalAddProposalRendering()}\n        {this.conditionalReviewProposalRendering()}\n      </React.Fragment>\n    );\n  }\n}\n\nexport default Container;\n"]},"metadata":{},"sourceType":"module"}