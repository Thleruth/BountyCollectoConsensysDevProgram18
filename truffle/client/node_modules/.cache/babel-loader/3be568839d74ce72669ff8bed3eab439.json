{"ast":null,"code":"import _regeneratorRuntime from \"/home/airoslive/Codes/EthCode/BountyCollector/client/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/airoslive/Codes/EthCode/BountyCollector/client/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/home/airoslive/Codes/EthCode/BountyCollector/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/airoslive/Codes/EthCode/BountyCollector/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/airoslive/Codes/EthCode/BountyCollector/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/airoslive/Codes/EthCode/BountyCollector/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/airoslive/Codes/EthCode/BountyCollector/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/home/airoslive/Codes/EthCode/BountyCollector/client/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/home/airoslive/Codes/EthCode/BountyCollector/client/src/components/Balance.jsx\";\nimport React, { Component } from \"react\";\n\nvar Balance =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Balance, _Component);\n\n  function Balance() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Balance);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Balance)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      balance: 0\n    };\n    _this.componentDidMount =\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee() {\n      var balance;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _this.props.onRef(_assertThisInitialized(_assertThisInitialized(_this)));\n\n              _context.t0 = parseInt;\n              _context.next = 4;\n              return _this.props.appState.contract.fetchMyBalance({\n                from: _this.props.appState.accounts[0]\n              });\n\n            case 4:\n              _context.t1 = _context.sent;\n              balance = (0, _context.t0)(_context.t1);\n\n              _this.setState({\n                balance: balance\n              });\n\n            case 7:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, this);\n    }));\n    _this.componentDidUpdate =\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee2() {\n      var balance;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.t0 = parseInt;\n              _context2.next = 3;\n              return _this.props.appState.contract.fetchMyBalance({\n                from: _this.props.appState.accounts[0]\n              });\n\n            case 3:\n              _context2.t1 = _context2.sent;\n              balance = (0, _context2.t0)(_context2.t1);\n\n              if (_this.state.balance !== balance) {\n                _this.setState({\n                  balance: balance\n                });\n              }\n\n            case 6:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, this);\n    }));\n    _this.refreshBalance =\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee3() {\n      var balance;\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.t0 = parseInt;\n              _context3.next = 3;\n              return _this.props.appState.contract.fetchMyBalance({\n                from: _this.props.appState.accounts[0]\n              });\n\n            case 3:\n              _context3.t1 = _context3.sent;\n              balance = (0, _context3.t0)(_context3.t1);\n\n              _this.setState({\n                balance: balance\n              });\n\n            case 6:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3, this);\n    }));\n    _this.withdrawBalance =\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee4() {\n      return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              _context4.next = 2;\n              return _this.props.appState.contract.withdrawFunds(_this.state.balance, {\n                from: _this.props.appState.accounts[0]\n              });\n\n            case 2:\n              _this.refreshBalance();\n\n            case 3:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, _callee4, this);\n    }));\n    return _this;\n  }\n\n  _createClass(Balance, [{\n    key: \"render\",\n    value: function render() {\n      console.log(\"render Balance interface\");\n      return React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }, \"My balance\"), React.createElement(\"table\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }, React.createElement(\"tbody\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }, React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }, React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }, \"Account\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }, \"Balance (in ETH)\")), React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }, this.props.appState.accounts[0]), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, this.state.balance / 1000000000000000000), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        className: \"WithdrawBalance\",\n        id: \"WithdrawBalance\",\n        onClick: this.withdrawBalance,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, \"Withdraw\"))))));\n    }\n  }]);\n\n  return Balance;\n}(Component);\n\nexport default Balance;","map":{"version":3,"sources":["/home/airoslive/Codes/EthCode/BountyCollector/client/src/components/Balance.jsx"],"names":["React","Component","Balance","state","balance","componentDidMount","props","onRef","parseInt","appState","contract","fetchMyBalance","from","accounts","setState","componentDidUpdate","refreshBalance","withdrawBalance","withdrawFunds","console","log"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\n\nclass Balance extends Component {\n  state = {\n    balance: 0,\n  }\n\n  componentDidMount = async () => {\n    this.props.onRef(this);\n    const balance = parseInt(await this.props.appState.contract.fetchMyBalance({from: this.props.appState.accounts[0]}));\n    this.setState({balance});\n  }\n\n  componentDidUpdate = async () => {\n    const balance = parseInt(await this.props.appState.contract.fetchMyBalance({from: this.props.appState.accounts[0]}));\n    if (this.state.balance !== balance) {\n      this.setState({balance});\n    }\n  }\n\n  refreshBalance = async () => {\n    const balance = parseInt(await this.props.appState.contract.fetchMyBalance({from: this.props.appState.accounts[0]}));\n    this.setState({balance});\n  }\n\n  withdrawBalance  = async () =>  {\n    await this.props.appState.contract.withdrawFunds(this.state.balance, {from: this.props.appState.accounts[0]})\n    this.refreshBalance()\n  }\n\n  render () {\n    console.log(\"render Balance interface\")\n    return (\n      <React.Fragment>\n      <h3>My balance</h3>\n      <table>\n        <tbody>\n          <tr>\n            <th>Account</th>\n            <th>Balance (in ETH)</th>\n          </tr>\n          <tr>\n            <td>{this.props.appState.accounts[0]}</td>\n            <td>{this.state.balance/1000000000000000000}</td>\n            <td><button className=\"WithdrawBalance\" id=\"WithdrawBalance\" onClick={this.withdrawBalance}>Withdraw</button></td>\n          </tr>\n        </tbody>\n      </table>\n      </React.Fragment>\n    )\n  }\n}\n\nexport default Balance;\n"]},"metadata":{},"sourceType":"module"}