{"ast":null,"code":"import _regeneratorRuntime from \"/home/airoslive/Codes/EthCode/BountyCollector/client/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/airoslive/Codes/EthCode/BountyCollector/client/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/home/airoslive/Codes/EthCode/BountyCollector/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/airoslive/Codes/EthCode/BountyCollector/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/airoslive/Codes/EthCode/BountyCollector/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/airoslive/Codes/EthCode/BountyCollector/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/airoslive/Codes/EthCode/BountyCollector/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/home/airoslive/Codes/EthCode/BountyCollector/client/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/home/airoslive/Codes/EthCode/BountyCollector/client/src/components/Disputes.jsx\";\nimport React, { Component } from \"react\";\nimport Dispute from \"./Dispute\";\nimport ListGroup from './common/ListGroup';\n\nvar Disputes =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Disputes, _Component);\n\n  function Disputes() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Disputes);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Disputes)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      disputesID: [],\n      statusFilters: [\"all\", \"reviewable\", \"declined\", \"accepted\", \"withdrawn\"],\n      selectedStatus: \"reviewable\"\n    };\n    _this.componentDidMount =\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee() {\n      var disputeCounter, disputesID, i;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _this.props.onRef(_assertThisInitialized(_assertThisInitialized(_this)));\n\n              disputeCounter = _this.props.disputesCounter;\n              disputesID = [];\n\n              for (i = disputeCounter; i >= 1; i--) {\n                disputesID.push(i);\n              }\n\n              _this.setState({\n                disputesID: disputesID\n              });\n\n            case 5:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, this);\n    }));\n\n    _this.handleStatusSelect = function (status) {\n      _this.setState({\n        selectedStatus: status\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(Disputes, [{\n    key: \"addDispute\",\n    value: function addDispute(disputeID) {\n      if (this.state.disputesID.length !== 1) {\n        var disputesID = this.state.disputesID;\n        disputesID.unshift(parseInt(disputeID));\n        this.setState({\n          disputesID: disputesID\n        });\n      }\n    }\n  }, {\n    key: \"populateDisputes\",\n    value: function populateDisputes() {\n      var _this2 = this;\n\n      console.log(\"pop disputes\");\n\n      if (this.state.disputesID.length > 0) {\n        var disputes = [];\n\n        for (var i = 0; i < this.state.disputesID.length; i++) {\n          if (this.state.disputesID[i] > 0) {\n            var item = React.createElement(\"tr\", {\n              key: this.state.disputesID[i],\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 37\n              },\n              __self: this\n            }, React.createElement(Dispute, {\n              appState: this.props.appState,\n              disputeID: this.state.disputesID[i],\n              selectedStatus: this.state.selectedStatus,\n              onAcceptDispute: function onAcceptDispute(bountyID) {\n                return _this2.props.onAcceptDispute(bountyID);\n              },\n              onDeclineDispute: function onDeclineDispute() {\n                return _this2.props.onDeclineDispute();\n              },\n              onWithdrawDispute: function onWithdrawDispute() {\n                return _this2.props.onWithdrawDispute();\n              },\n              arbitragerAddress: this.props.arbitragerAddress,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 37\n              },\n              __self: this\n            }));\n            disputes.push(item);\n          }\n        }\n\n        return disputes;\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      console.log(\"render Disputes\");\n      return React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, \"My disputes\"), React.createElement(\"div\", {\n        className: \"column\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"dispute-status-filter\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, React.createElement(ListGroup, {\n        name: \"Status\",\n        items: this.state.statusFilters,\n        onItemSelect: this.handleStatusSelect,\n        selectedItem: this.state.selectedStatus,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"shown-disputes\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, React.createElement(\"table\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, React.createElement(\"tbody\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, \"Identifier\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, \"Bounty Name\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, \"Bounty Description\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }, \"Proposal Description\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }, \"Proposal Review\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, \"Status\")), this.populateDisputes())))));\n    }\n  }]);\n\n  return Disputes;\n}(Component);\n\nexport default Disputes;","map":{"version":3,"sources":["/home/airoslive/Codes/EthCode/BountyCollector/client/src/components/Disputes.jsx"],"names":["React","Component","Dispute","ListGroup","Disputes","state","disputesID","statusFilters","selectedStatus","componentDidMount","props","onRef","disputeCounter","disputesCounter","i","push","setState","handleStatusSelect","status","disputeID","length","unshift","parseInt","console","log","disputes","item","appState","bountyID","onAcceptDispute","onDeclineDispute","onWithdrawDispute","arbitragerAddress","populateDisputes"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport Dispute from \"./Dispute\";\nimport ListGroup from './common/ListGroup';\n\n\nclass Disputes extends Component {\n  state = {\n    disputesID: [],\n    statusFilters: [\"all\", \"reviewable\", \"declined\", \"accepted\", \"withdrawn\"],\n    selectedStatus: \"reviewable\",\n  }\n\n  componentDidMount = async () => {\n    this.props.onRef(this);\n    const disputeCounter = this.props.disputesCounter;\n    var disputesID = []\n    for (var i = disputeCounter; i >= 1; i--) {\n      disputesID.push(i);\n    }\n    this.setState({disputesID})\n  }\n\n  addDispute(disputeID) {\n    if (this.state.disputesID.length !== 1) {\n      var disputesID = this.state.disputesID;\n      disputesID.unshift(parseInt(disputeID));\n      this.setState({disputesID})\n    }\n  }\n\n  populateDisputes() {\n    console.log(\"pop disputes\")\n    if (this.state.disputesID.length > 0) {\n      var disputes = [];\n      for (let i = 0; i < this.state.disputesID.length; i++) {\n        if (this.state.disputesID[i] > 0) {\n          var item = (<tr key={this.state.disputesID[i]}><Dispute\n            appState={this.props.appState}\n            disputeID={this.state.disputesID[i]}\n            selectedStatus={this.state.selectedStatus}\n            onAcceptDispute={(bountyID) => this.props.onAcceptDispute(bountyID)}\n            onDeclineDispute={() => this.props.onDeclineDispute()}\n            onWithdrawDispute={() => this.props.onWithdrawDispute()}\n            arbitragerAddress={this.props.arbitragerAddress}\n          /></tr>)\n          disputes.push(item);\n          }\n        }\n        return disputes;\n    }\n  }\n\n handleStatusSelect = status => {\n   this.setState({selectedStatus: status})\n }\n\n render() {\n   console.log(\"render Disputes\")\n   return(\n     <React.Fragment>\n     <h3>My disputes</h3>\n     <div className=\"column\">\n       <div className=\"dispute-status-filter\">\n         <ListGroup\n           name=\"Status\"\n           items={this.state.statusFilters}\n           onItemSelect={this.handleStatusSelect}\n           selectedItem={this.state.selectedStatus}\n         />\n       </div>\n       <div className=\"shown-disputes\">\n         <table>\n         <tbody>\n          <tr>\n            <th>Identifier</th>\n            <th>Bounty Name</th>\n            <th>Bounty Description</th>\n            <th>Proposal Description</th>\n            <th>Proposal Review</th>\n            <th>Status</th>\n          </tr>\n        {this.populateDisputes()}\n        </tbody>\n        </table>\n      </div>\n    </div>\n    </React.Fragment>\n    )\n  }\n}\n\nexport default Disputes;\n"]},"metadata":{},"sourceType":"module"}